<?php

namespace api\modules\v1\controllers;

use api\modules\v1\models\user\Member;
use common\tools\AesEncrypt;
use Yii;
use yii\helpers\VarDumper;
use yii\rest\ActiveController;
use yii\base\InvalidParamException;
use yii\web\BadRequestHttpException;
use api\modules\v1\models\user\PasswordResetRequestForm;
use api\modules\v1\models\user\ResetPasswordForm;
use yii\web\UnauthorizedHttpException;
use yii\filters\Cors;
use yii\helpers\ArrayHelper;
/**
 * Default controller for the `api` module
 */
class DefaultController extends ActiveController
{
    public function behaviors()
    {
        return ArrayHelper::merge([
            [
                'class' => Cors::className(),
            ],
        ], parent::behaviors());
    }
    /**
     * @var string
     */
    private $tokenuri = "http://api.base.com/oauth2/token"; //请求token的url 可以获取token 、通过codke获取token 、获取refretoken

    /**
     * @var string
     */
    private $client_id = 'testclient';

    /**
     * @var string
     */
    private $passwd = 'testpass';

    /**
     * @var string
     */
    private $redirect = 'http://api.base.com/v1/user/1';//用来验证的

    /**
     * @var string
     */
    public $modelClass = 'api\modules\v1\models\user\Member';

    /**
     * @var
     */
    private $user;

    /**
     *
     */
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->user = new Member();
    }

    /**
     *
     */
    public function actions()
    {
        $action = parent::actions();
        unset($action);
    }


    /**
     * 用户注册
     * @return mixed
     */
    public function actionRegister()
    {
        return $this->user->register();
    }

    /**
     * 用户登录
     * @return mixed
     */
    public function actionLogin()
    {
        return $this->user->login();
    }


    /**
     * 刷新令牌
     * @return mixed
     */
    public function actionRefresh()
    {
        $request = Yii::$app->request;
        $data = array('grant_type' => 'refresh_token', 'refresh_token' => $request->post('refresh_token'));
        $userpasswd = $this->client_id . ':' . $this->passwd;
        $return = $this->curlpost($this->tokenuri, $data, $userpasswd);
        $return = json_decode($return, true);
        return $return['data'];
    }

    //
    public function curlpost($uri, $data, $userpasswd = null)
    {
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $uri);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_HEADER, 0);
        if ($userpasswd != null) {
            curl_setopt($ch, CURLOPT_USERPWD, $userpasswd);
        }
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
        $return = curl_exec($ch);
        curl_close($ch);
        return $return;

    }

    public function actionError()
    {
        return '页面未找到.';
    }

    /**测试加密**/

    public function actionTest()
    {
        $post = Yii::$app->request->post();
//        $encrypted = $post['data'];
        $aes = new AesEncrypt();
        $arr = $aes::aes_decrypt($post['id']);
        $test = $this->parse_url_param($arr);//获取到的数据
        $user = new Member();
        $a = $user::find()->where(['id' => 33])->asArray()->all();
        $b = json_encode($a);
        $data = $aes::aes_encrypt($b);
        return $data;
    }


    /**
     * 获取url中的各个参数
     * @param $str
     * @return array
     */
    public function parse_url_param($str)
    {
        $data = array();
        $arr = explode('&', $str);
        foreach ($arr as $val) {
            $tmp = explode('=', $val);
            $data[$tmp[0]] = $tmp[1];
        }
        return $data;
    }

    /**
     * 找回密码 发送邮箱

     * @return array
     * @throws UnauthorizedHttpException
     */
    public function actionReset()
    {
        $model = new PasswordResetRequestForm();

        $model->attributes = Yii::$app->request->post();
        $url = $model->sendEmail();
        if ($url) {
            $arr = ['url'=>$url,'msg'=>'验证码发送成功,' . '检查您的电子邮件以获得进一步的说明。'];
            return $arr;
        }else{
            throw new UnauthorizedHttpException(':(对不起，我们无法为所提供的电子邮件地址重置密码。');
        }
    }
    /**
     * Resets password.
     * 重置密码
     * @param string $token
     * @return mixed
     * @throws BadRequestHttpException
     */
    public function actionResetPassword($token)
    {
        try {
            $model = new ResetPasswordForm($token);
        } catch (InvalidParamException $e) {
            throw new BadRequestHttpException($e->getMessage());
        }
        $model->attributes = Yii::$app->request->post();
        if ( $model->validate() && $model->resetPassword()) {
            return '修改成功';
        }else{
            $errors =  $model->errors;
            if (!empty($errors['code'])) {
                throw new BadRequestHttpException('验证码不能为空');
            }
            if (!empty($errors['password'])) {
                throw new BadRequestHttpException('密码不能为空');
            }
        }
    }
}